SD_ConsumerIntentions = sd(consumer_intentions, na.rm = TRUE))
knitr::kable(cons_int_D2, digits = 2, caption = "Descriptives for Consumer Intentions by Norm Condition")
# cell means
cons_int_D3 <- data_R %>%
group_by(framing_condition, norm_condition) %>%
summarize(n = n(),
M_ConsumerIntentions = mean(consumer_intentions, na.rm = TRUE),
SD_ConsumerIntentions = sd(consumer_intentions, na.rm = TRUE))
knitr::kable(cons_int_D3, digits = 2, caption = "Descriptives for Consumer Intentions by Framing X Norm Condition")
# Chunk 68: descriptives ingroup ident
# Ingroup Identification
ingroup_D <- data_R %>%
group_by(framing_condition) %>%
summarize(n = n(),
M_IngroupIdentification = mean(ingroup_identification, na.rm = TRUE),
SD_IngroupIdentification = sd(ingroup_identification, na.rm = TRUE))
knitr::kable(ingroup_D, digits = 2, caption = "Descriptives for Ingroup Identification by Framing Condition")
ingroup_D2 <- data_R %>%
group_by(norm_condition) %>%
summarize(n = n(),
M_IngroupIdentification = mean(ingroup_identification, na.rm = TRUE),
SD_IngroupIdentification = sd(ingroup_identification, na.rm = TRUE))
knitr::kable(ingroup_D2, digits = 2, caption = "Descriptives for Ingroup Identification by Norm Condition")
ingroup_D3 <- data_R %>%
group_by(framing_condition, norm_condition) %>%
summarize(n = n(),
M_IngroupIdentification = mean(ingroup_identification, na.rm = TRUE),
SD_IngroupIdentification = sd(ingroup_identification, na.rm = TRUE))
knitr::kable(ingroup_D3, digits = 2, caption = "Descriptives for Ingroup Identification by Framing X Norm Condition")
# Chunk 69: descriptives values
# Values
values_D <- data_R %>%
group_by(framing_condition) %>%
summarize(n = n(),
M_Biospheric = mean(biospheric, na.rm = TRUE),
SD_Biospheric = sd(biospheric, na.rm = TRUE),
M_Altruistic = mean(altruistic, na.rm = TRUE),
SD_Altruistic = sd(altruistic, na.rm = TRUE),
M_Egoistic = mean(egoistic, na.rm = TRUE),
SD_Egoistic = sd(egoistic, na.rm = TRUE),
M_Hedonic = mean(hedonic, na.rm = TRUE),
SD_Hedonic = sd(hedonic, na.rm = TRUE))
knitr::kable(values_D, digits = 2, caption = "Descriptives for Values by Framing Condition")
values_D2 <- data_R %>%
group_by(norm_condition) %>%
summarize(n = n(),
M_Biospheric = mean(biospheric, na.rm = TRUE),
SD_Biospheric = sd(biospheric, na.rm = TRUE),
M_Altruistic = mean(altruistic, na.rm = TRUE),
SD_Altruistic = sd(altruistic, na.rm = TRUE),
M_Egoistic = mean(egoistic, na.rm = TRUE),
SD_Egoistic = sd(egoistic, na.rm = TRUE),
M_Hedonic = mean(hedonic, na.rm = TRUE),
SD_Hedonic = sd(hedonic, na.rm = TRUE))
knitr::kable(values_D2, digits = 2, caption = "Descriptives for Values by Norm Condition")
values_D3 <- data_R %>%
group_by(framing_condition, norm_condition) %>%
summarize(n = n(),
M_Biospheric = mean(biospheric, na.rm = TRUE),
SD_Biospheric = sd(biospheric, na.rm = TRUE),
M_Altruistic = mean(altruistic, na.rm = TRUE),
SD_Altruistic = sd(altruistic, na.rm = TRUE),
M_Egoistic = mean(egoistic, na.rm = TRUE),
SD_Egoistic = sd(egoistic, na.rm = TRUE),
M_Hedonic = mean(hedonic, na.rm = TRUE),
SD_Hedonic = sd(hedonic, na.rm = TRUE))
knitr::kable(values_D3, digits = 2, caption = "Descriptives for Values by Framing X Norm Condition")
# Chunk 70: descriptives clothing interest
# Clothing Interest
clothing_D <- data_R %>%
group_by(framing_condition) %>%
summarize(n = n(),
M_ClothingInterest = mean(clothing_interest, na.rm = TRUE),
SD_ClothingInterest = sd(clothing_interest, na.rm = TRUE))
knitr::kable(clothing_D, digits = 2, caption = "Descriptives for Clothing Interest by Framing Condition")
clothing_D2 <- data_R %>%
group_by(norm_condition) %>%
summarize(n = n(),
M_ClothingInterest = mean(clothing_interest, na.rm = TRUE),
SD_ClothingInterest = sd(clothing_interest, na.rm = TRUE))
knitr::kable(clothing_D2, digits = 2, caption = "Descriptives for Clothing Interest by Norm Condition")
clothing_D3 <- data_R %>%
group_by(framing_condition, norm_condition) %>%
summarize(n = n(),
M_ClothingInterest = mean(clothing_interest, na.rm = TRUE),
SD_ClothingInterest = sd(clothing_interest, na.rm = TRUE))
knitr::kable(clothing_D3, digits = 2, caption = "Descriptives for Clothing Interest by Framing X Norm Condition")
# Chunk 71: descriptives soc des resp
# Socially Desirable Responding
sde_sdr_D <- data_R %>%
group_by(framing_condition) %>%
summarize(n = n(),
M_SDE_SDR = mean(self_deceptive_sdr, na.rm = TRUE),
SD_SDE_SDR = sd(self_deceptive_sdr, na.rm = TRUE))
knitr::kable(sde_sdr_D, digits = 2, caption = "Descriptives for Self Deceptive Socially Desirable Responding by Framing Condition")
im_sdr_D <- data_R %>%
group_by(framing_condition) %>%
summarize(n = n(),
M_IM_SDR = mean(impress_manag_sdr, na.rm = TRUE),
SD_IM_SDR = sd(impress_manag_sdr, na.rm = TRUE))
knitr::kable(im_sdr_D, digits = 2, caption = "Descriptives for Impression Management Socially Desirable Responding by Framing Condition")
sde_sdr_D2 <- data_R %>%
group_by(norm_condition) %>%
summarize(n = n(),
M_SDE_SDR = mean(self_deceptive_sdr, na.rm = TRUE),
SD_SDE_SDR = sd(self_deceptive_sdr, na.rm = TRUE))
knitr::kable(sde_sdr_D2, digits = 2, caption = "Descriptives for Self Deceptive Socially Desirable Responding by Norm Condition")
im_sdr_D2 <- data_R %>%
group_by(norm_condition) %>%
summarize(n = n(),
M_IM_SDR = mean(impress_manag_sdr, na.rm = TRUE),
SD_IM_SDR = sd(impress_manag_sdr, na.rm = TRUE))
knitr::kable(im_sdr_D2, digits = 2, caption = "Descriptives for Impression Management Socially Desirable Responding by Norm Condition")
# Chunk 72: descriptives personality
# Personality
pers_D <- data_R %>%
group_by(framing_condition) %>%
summarize(n = n(),
M_E = mean(extraversion, na.rm = TRUE),
SD_E = sd(extraversion, na.rm = TRUE),
M_C = mean(conscientiousness, na.rm = TRUE),
SD_C = sd(conscientiousness, na.rm = TRUE),
M_A = mean(agreeableness, na.rm = TRUE),
SD_A = sd(agreeableness, na.rm = TRUE),
M_N = mean(neuroticism, na.rm = TRUE),
SD_N = sd(neuroticism, na.rm = TRUE),
M_O = mean(openness, na.rm = TRUE),
SD_O = sd(openness, na.rm = TRUE),
M_H = mean(honesty, na.rm = TRUE),
SD_H = sd(honesty, na.rm = TRUE))
knitr::kable(pers_D, digits = 2, caption = "Descriptives for Personality Traits by Framing Condition")
pers_D2 <- data_R %>%
group_by(norm_condition) %>%
summarize(n = n(),
M_E = mean(extraversion, na.rm = TRUE),
SD_E = sd(extraversion, na.rm = TRUE),
M_C = mean(conscientiousness, na.rm = TRUE),
SD_C = sd(conscientiousness, na.rm = TRUE),
M_A = mean(agreeableness, na.rm = TRUE),
SD_A = sd(agreeableness, na.rm = TRUE),
M_N = mean(neuroticism, na.rm = TRUE),
SD_N = sd(neuroticism, na.rm = TRUE),
M_O = mean(openness, na.rm = TRUE),
SD_O = sd(openness, na.rm = TRUE),
M_H = mean(honesty, na.rm = TRUE),
SD_H = sd(honesty, na.rm = TRUE))
knitr::kable(pers_D2, digits = 2, caption = "Descriptives for Personality Traits by Norm Condition")
pers_D3 <- data_R %>%
group_by(framing_condition, norm_condition) %>%
summarize(n = n(),
M_E = mean(extraversion, na.rm = TRUE),
SD_E = sd(extraversion, na.rm = TRUE),
M_C = mean(conscientiousness, na.rm = TRUE),
SD_C = sd(conscientiousness, na.rm = TRUE),
M_A = mean(agreeableness, na.rm = TRUE),
SD_A = sd(agreeableness, na.rm = TRUE),
M_N = mean(neuroticism, na.rm = TRUE),
SD_N = sd(neuroticism, na.rm = TRUE),
M_O = mean(openness, na.rm = TRUE),
SD_O = sd(openness, na.rm = TRUE),
M_H = mean(honesty, na.rm = TRUE),
SD_H = sd(honesty, na.rm = TRUE))
knitr::kable(pers_D3, digits = 2, caption = "Descriptives for Personality Traits by Framing X Norm Condition")
# Chunk 73: label levels of consumer behaviors
levels(data_R$consumer_behaviors) <- c("New Clothing", "Secondhand Clothing")
# Chunk 74: descriptives consumer behaviors
# by framing condition
## Frequency table
framing_main_behaviors <- data_R %>%
group_by(framing_condition) %>%
dplyr::select(consumer_behaviors) %>%
table()
# Table of proportions (Contingency Table)
prop.table(framing_main_behaviors)
# by norm
## Frequency table
norm_main_behaviors <- data_R %>%
group_by(norm_condition) %>%
dplyr::select(consumer_behaviors) %>%
table()
## Table of proportions (Contingency Table)
prop.table(norm_main_behaviors)
# by framing X norm condition
## Frequency table
int_effect_behaviors <- table(data_R$framing_condition, data_R$norm_condition)
## Proportions (Contingency Table)
prop.table(int_effect_behaviors)
# Chunk 75: proportions by row
## Main Effect of Framing
prop.table(framing_main_behaviors, margin = 1) # Row percentages
## Main Effect of Norm
prop.table(norm_main_behaviors, margin = 1) # Row percentages
## Interaction Effect
prop.table(int_effect_behaviors, margin = 1) # Row percentages
# Chunk 76: label skepticism
levels(data_R$skepticism) <- c("Yes", "No")
# Chunk 77: skepticism table of props skept
# by framing condition
## Frequency table
skepticism_by_framing <- data_R %>%
group_by(framing_condition) %>%
dplyr::select(skepticism) %>%
table()
# Table of proportions (Contingency Table)
prop.table(skepticism_by_framing)
# by norm
## Frequency table
skepticism_by_norm <- data_R %>%
group_by(norm_condition) %>%
dplyr::select(skepticism) %>%
table()
## Table of proportions (Contingency Table)
prop.table(skepticism_by_norm)
# Chunk 78: proportions by row skept
## Main Effect of Framing
prop.table(skepticism_by_framing, margin = 1) # Row percentages
## Main Effect of Norm
prop.table(skepticism_by_norm, margin = 1) # Row percentages
# Chunk 79: scatterplot matrix
# Consumer intentions with ingroup identification, clothing interest, socially desirable, age
data_R %>%
dplyr::select(consumer_intentions, ingroup_identification, clothing_interest, self_deceptive_sdr, impress_manag_sdr) %>%
pairs(upper.panel = NULL)
# Consumer intentions with values
data_R %>%
dplyr::select(consumer_intentions, biospheric, altruistic, egoistic, hedonic, Age) %>%
pairs(upper.panel = NULL)
# Chunk 80: center covariates
data_R$self_deceptive_center <- data_R$self_deceptive_sdr - mean(data_R$self_deceptive_sdr, na.rm = TRUE)
data_R$impress_manag_center <- data_R$impress_manag_sdr - mean(data_R$impress_manag_sdr, na.rm = TRUE)
data_R$clothing_interest_center <- data_R$clothing_interest - mean(data_R$clothing_interest, na.rm = TRUE)
data_R$Age_center <- data_R$Age - mean(data_R$Age, na.rm = TRUE)
data_R$ingroup_identification_center <- data_R$ingroup_identification - mean(data_R$ingroup_identification, na.rm = TRUE)
data_R$biospheric_center <- data_R$biospheric - mean(data_R$biospheric, na.rm = TRUE)
data_R$altruistic_center <- data_R$altruistic - mean(data_R$altruistic, na.rm = TRUE)
data_R$egoistic_center <- data_R$egoistic - mean(data_R$egoistic, na.rm = TRUE)
data_R$hedonic_center <- data_R$hedonic - mean(data_R$hedonic, na.rm = TRUE)
data_R$extraversion_center <- data_R$extraversion - mean(data_R$extraversion, na.rm = TRUE)
data_R$conscientiousness_center <- data_R$conscientiousness - mean(data_R$conscientiousness, na.rm = TRUE)
data_R$agreeableness_center <- data_R$agreeableness - mean(data_R$agreeableness, na.rm = TRUE)
data_R$neuroticism_center <- data_R$neuroticism - mean(data_R$neuroticism, na.rm = TRUE)
data_R$openness_center <- data_R$openness - mean(data_R$openness, na.rm = TRUE)
data_R$honesty_center <- data_R$honesty - mean(data_R$honesty, na.rm = TRUE)
# Chunk 81: reduce levels of gender
data_R$Gender[data_R$Gender == "Non-binary"] <- NA
data_R$Gender[data_R$Gender == "I prefer not to identify"] <- NA
data_R$Gender[data_R$Gender == "Other"] <- NA
data_R$Gender <- droplevels(data_R$Gender)
# Chunk 82: contrast coding 1
# Gender
contrasts(data_R$Gender) <- c(-1/2, 1/2)
contrasts(data_R$Gender)
# Framing
FrameCode1 <- c(-1/2, 0, 1/2) # control vs self-enhancing
FrameCode2 <- c(-1/3, 2/3, -1/3) # arbitrary code
contrasts(data_R$framing_condition) <- cbind(FrameCode1, FrameCode2)
contrasts(data_R$framing_condition)
# Norm
contrasts(data_R$norm_condition) <- contr.helmert(5)
contrasts(data_R$norm_condition) # control vs DN
# Skepticism
contrasts(data_R$skepticism) <- c(-1/2, 1/2)
# Chunk 83: full model consumer intentions
full_model_1a <- lm(consumer_intentions ~ framing_condition*norm_condition*biospheric_center + framing_condition*norm_condition*altruistic_center + framing_condition*norm_condition*egoistic_center + framing_condition*norm_condition*hedonic_center + framing_condition*norm_condition*ingroup_identification_center + self_deceptive_center + impress_manag_center + clothing_interest_center + Gender + Age_center, data = data_R)
# Chunk 84: full summary consumer intentions
regr_summary <- summary(full_model_1a)
summary(full_model_1a)
# Chunk 85: anova table consumer intentions
anova(full_model_1a) %>%
knitr::kable(digits = 3)
# Chunk 86
eta_squared(full_model_1a, ci = 0.95, alternative = "two.sided", partial = FALSE)
# Chunk 87
eta_squared(full_model_1a, ci = 0.95, alternative = "two.sided")
# Chunk 88: pretty summary table consumer intentions
tab_model(full_model_1a, show.se = TRUE, show.fstat = TRUE)
# Chunk 89: succinct summary consumer intentions
regr_summary$coefficients %>%
knitr::kable(digits = 3)
# Chunk 90
plot(full_model_1a, 1)
# Chunk 91
# storing residuals
full_model_1a_aug <- augment(full_model_1a)
# plotting histogram of residuals
ggplot(data = full_model_1a_aug, aes(x = .resid)) +
geom_density(fill = "purple") +
stat_function(linetype = 2,
fun      = dnorm,
args     = list(mean = mean(full_model_1a_aug$.resid),
sd   =   sd(full_model_1a_aug$.resid))) +
theme_minimal()
# QQ-plot
ggplot(full_model_1a) +
geom_abline(color = "turquoise4") +
stat_qq(aes(sample = .stdresid), color = "darkorchid4", alpha = .50) +
theme_minimal()
# Chunk 92
plot(full_model_1a, 1)
# Chunk 93
# using olsrr function
ols_plot_resid_stand(full_model_1a)
# or grabbing from model augment output
full_model_1a_aug <- augment(full_model_1a)
full_model_1a_aug$id <- full_model_1a_aug$.rownames
std_resids <- full_model_1a_aug %>%
dplyr::select(.rownames, .std.resid) %>%
arrange(desc(abs(.std.resid)))
print(std_resids, n = 15)
# Chunk 94
# using olsrr function
ols_plot_cooksd_chart(full_model_1a)
# or grabbing from model augment output
cooks_d <- full_model_1a_aug %>%
dplyr::select(.rownames, .cooksd) %>%
arrange(desc(abs(.cooksd)))
print(cooks_d, n = 15)
# Chunk 95
ols_vif_tol(full_model_1a) %>%
arrange(desc(abs(VIF)))
# Chunk 96
frame_means <- emmeans(full_model_1a, pairwise ~ framing_condition, adjust = "none")
frame_means
emmip(full_model_1a, ~ framing_condition, CIs = TRUE, xlab = "Framing Condition", ylab = "Consumer Intentions")
# Chunk 97
eff_size(frame_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a))
# Chunk 98
norm_means <- emmeans(full_model_1a, pairwise ~ norm_condition, adjust = "none")
norm_means
emmip(full_model_1a, ~ norm_condition, CIs = TRUE, xlab = "Norm Condition", ylab = "Consumer Intentions")
# Chunk 99
eff_size(norm_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a))
# Chunk 100
cell_means <- emmeans(full_model_1a, pairwise ~ norm_condition | framing_condition, adjust = "none")
cell_means
emmip(full_model_1a, framing_condition ~ norm_condition, CIs = FALSE, xlab = "Norm Condition", ylab = "Consumer Intentions")
# Chunk 101
eff_size(cell_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a))
# Chunk 102
# Control norm
chosen_values <- list(norm_condition = c("control_norm"), framing_condition = c("control_framing", "pro_env_framing", "self_enh_framing"))
control_norm_means <- emmeans(full_model_1a, pairwise ~ norm_condition*framing_condition, at = chosen_values, adjust = "none")
control_norm_means
eff_size(control_norm_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a)) # cohen's d
# Descriptive norm
chosen_values <- list(norm_condition = c("descriptive_norm"), framing_condition = c("control_framing", "pro_env_framing", "self_enh_framing"))
descr_norm_means <- emmeans(full_model_1a, pairwise ~ norm_condition*framing_condition, at = chosen_values, adjust = "none")
descr_norm_means
eff_size(descr_norm_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a)) # cohen's d
# Convention norm
chosen_values <- list(norm_condition = c("convention_norm"), framing_condition = c("control_framing", "pro_env_framing", "self_enh_framing"))
conv_norm_means <- emmeans(full_model_1a, pairwise ~ norm_condition*framing_condition, at = chosen_values, adjust = "none")
conv_norm_means
eff_size(conv_norm_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a)) # cohen's d
# Social norm
chosen_values <- list(norm_condition = c("social_norm"), framing_condition = c("control_framing", "pro_env_framing", "self_enh_framing"))
soc_norm_means <- emmeans(full_model_1a, pairwise ~ norm_condition*framing_condition, at = chosen_values, adjust = "none")
soc_norm_means
eff_size(soc_norm_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a)) # cohen's d
# Moral norm
chosen_values <- list(norm_condition = c("moral_norm"), framing_condition = c("control_framing", "pro_env_framing", "self_enh_framing"))
moral_norm_means <- emmeans(full_model_1a, pairwise ~ norm_condition*framing_condition, at = chosen_values, adjust = "none")
moral_norm_means
eff_size(moral_norm_means, sigma = sigma(full_model_1a), edf = df.residual(full_model_1a)) # cohen's d
# Chunk 103
emtrends(full_model_1a, ~norm_condition, var = "biospheric_center", adjust = "none")
# On a single graph
at_list <- list(biospheric_center = seq(-5, 1.3, by = 1))
emmip(full_model_1a, norm_condition ~ biospheric_center, at = at_list, CIs = TRUE, xlab = "Biospheric Values (centered)", ylab = "Consumer Intentions")
# Chunk 104
emtrends(full_model_1a, pairwise~norm_condition, var = "biospheric_center", adjust = "none")
# Chunk 105
emtrends(full_model_1a, ~framing_condition, var = "biospheric_center", adjust = "none")
# On a single graph
at_list <- list(biospheric_center = seq(-5, 1.3, by = 1))
emmip(full_model_1a, framing_condition ~ biospheric_center, at = at_list, CIs = TRUE, xlab = "Biospheric Values (centered)", ylab = "Consumer Intentions")
# Chunk 106
emtrends(full_model_1a, pairwise~framing_condition, var = "biospheric_center", adjust = "none")
# Chunk 107
emtrends(full_model_1a, ~norm_condition | framing_condition, var = "biospheric_center", adjust = "none")
# Separate graph for each framing condition
at_list <- list(biospheric_center = seq(-5, 1.3, by = 1))
emmip(full_model_1a, norm_condition ~ biospheric_center | framing_condition, at = at_list, CIs = TRUE, xlab = "Biospheric Values (centered)", ylab = "Consumer Intentions")
# Chunk 108
emtrends(full_model_1a, ~norm_condition, var = "altruistic_center", adjust = "none")
# On a single graph
at_list <- list(altruistic_center = seq(-5.4, 1, by = 1))
emmip(full_model_1a, norm_condition ~ altruistic_center, at = at_list, CIs = TRUE, xlab = "Altruistic Values (centered)", ylab = "Consumer Intentions")
# Chunk 109
emtrends(full_model_1a, pairwise~norm_condition, var = "altruistic_center", adjust = "none")
# Chunk 110
emtrends(full_model_1a, ~framing_condition, var = "altruistic_center", adjust = "none")
# On a single graph
at_list <- list(altruistic_center = seq(-5.4, 1, by = 1))
emmip(full_model_1a, framing_condition ~ altruistic_center, at = at_list, CIs = TRUE, xlab = "Altruistic Values (centered)", ylab = "Consumer Intentions")
# Separate graph for each norm
emmip(full_model_1a, ~ altruistic_center | framing_condition, at = at_list, CIs = TRUE, xlab = "Altruistic Values (centered)", ylab = "Consumer Intentions")
# Chunk 111
emtrends(full_model_1a, pairwise~framing_condition, var = "altruistic_center", adjust = "none")
# Chunk 112
emtrends(full_model_1a, ~norm_condition | framing_condition, var = "altruistic_center", adjust = "none")
# Separate graph for each framing condition
at_list <- list(altruistic_center = seq(-5.4, 1, by = 1))
emmip(full_model_1a, norm_condition ~ altruistic_center | framing_condition, at = at_list, CIs = TRUE, xlab = "Altruistic Values (centered)", ylab = "Consumer Intentions")
# Chunk 113
emtrends(full_model_1a, ~norm_condition, var = "egoistic_center", adjust = "none")
# On a single graph
at_list <- list(egoistic_center = seq(-3.6, 2.2, by = 1))
emmip(full_model_1a, norm_condition ~ egoistic_center, at = at_list, CIs = TRUE, xlab = "Egoistic Values (centered)", ylab = "Consumer Intentions")
# Chunk 114
emtrends(full_model_1a, pairwise~norm_condition, var = "egoistic_center", adjust = "none")
# Chunk 115
emtrends(full_model_1a, ~framing_condition, var = "egoistic_center", adjust = "none")
# On a single graph
at_list <- list(egoistic_center = seq(-3.6, 2.2, by = 1))
emmip(full_model_1a, framing_condition ~ egoistic_center, at = at_list, CIs = TRUE, xlab = "Egoistic Values (centered)", ylab = "Consumer Intentions")
# Chunk 116
emtrends(full_model_1a, pairwise~framing_condition, var = "egoistic_center", adjust = "none")
# Chunk 117
emtrends(full_model_1a, ~norm_condition | framing_condition, var = "egoistic_center", adjust = "none")
# Separate graph for each framing condition
at_list <- list(egoistic_center = seq(-3.6, 2.2, by = 1))
emmip(full_model_1a, norm_condition ~ egoistic_center | framing_condition, at = at_list, CIs = TRUE, xlab = "Egoistic Values (centered)", ylab = "Consumer Intentions")
# Chunk 118
emtrends(full_model_1a, ~norm_condition, var = "hedonic_center", adjust = "none")
# On a single graph
at_list <- list(hedonic_center = seq(-5.2, 1.2, by = 1))
emmip(full_model_1a, norm_condition ~ hedonic_center, at = at_list, CIs = TRUE, xlab = "Hedonic Values (centered)", ylab = "Consumer Intentions")
# Chunk 119
emtrends(full_model_1a, pairwise~norm_condition, var = "hedonic_center", adjust = "none")
# Chunk 120
emtrends(full_model_1a, ~framing_condition, var = "hedonic_center", adjust = "none")
# On a single graph
at_list <- list(hedonic_center = seq(-5.2, 1.2, by = 1))
emmip(full_model_1a, framing_condition ~ hedonic_center, at = at_list, CIs = TRUE, xlab = "Hedonic Values (centered)", ylab = "Consumer Intentions")
# Chunk 121
emtrends(full_model_1a, pairwise~framing_condition, var = "hedonic_center", adjust = "none")
# Chunk 122
emtrends(full_model_1a, ~norm_condition | framing_condition, var = "hedonic_center", adjust = "none")
# Separate graph for each framing condition
at_list <- list(hedonic_center = seq(-5.2, 1.2, by = 1))
emmip(full_model_1a, norm_condition ~ hedonic_center | framing_condition, at = at_list, CIs = TRUE, xlab = "Hedonic Values (centered)", ylab = "Consumer Intentions")
# Chunk 123
?ggplot2
# Chunk 124
emtrends(full_model_1a, ~norm_condition, var = "ingroup_identification_center", adjust = "none")
# On a single graph
at_list <- list(ingroup_identification_center = seq(-3.8, 2.6, by = 1))
emmip(full_model_1a, norm_condition ~ ingroup_identification_center, at = at_list, CIs = TRUE, xlab = "Ingroup Identification (centered)", ylab = "Consumer Intentions")
# Chunk 125
emtrends(full_model_1a, pairwise~norm_condition, var = "ingroup_identification_center", adjust = "none")
# Chunk 126
emtrends(full_model_1a, ~framing_condition, var = "ingroup_identification_center", adjust = "none")
# On a single graph
at_list <- list(ingroup_identification_center = seq(-3.8, 2.6, by = 1))
emmip(full_model_1a, framing_condition ~ ingroup_identification_center, at = at_list, CIs = TRUE, xlab = "Ingroup Identification (centered)", ylab = "Consumer Intentions")
# Chunk 127
emtrends(full_model_1a, pairwise~framing_condition, var = "ingroup_identification_center", adjust = "none")
# Chunk 128
emtrends(full_model_1a, ~norm_condition | framing_condition, var = "ingroup_identification_center", adjust = "tukey")
# Separate graph for each framing condition
at_list <- list(ingroup_identification_center = seq(-3.8, 2.6, by = 1))
emmip(full_model_1a, norm_condition ~ ingroup_identification_center | framing_condition, at = at_list, CIs = TRUE, xlab = "Ingroup Identification (centered)", ylab = "Consumer Intentions")
# Chunk 129
emmeans(full_model_1a, pairwise ~ norm_condition*framing_condition, adjust = "tukey")
emmip(full_model_1a, framing_condition ~ norm_condition, CIs = TRUE, xlab = "Norm Condition", ylab = "Consumer Intentions")
# Chunk 130
emmeans(full_model_1a, ~ norm_condition*Gender*framing_condition, adjust = "none")
emmip(full_model_1a, Gender ~ norm_condition | framing_condition, CIs = FALSE, xlab = "Norm Condition", ylab = "Consumer Intentions")
emmip(full_model_1a, Gender ~ framing_condition | norm_condition, CIs = FALSE, xlab = "Norm Condition", ylab = "Consumer Intentions")
# Chunk 131
log_model <- glm(consumer_behaviors ~ framing_condition*norm_condition*biospheric_center + framing_condition*norm_condition*altruistic_center + framing_condition*norm_condition*egoistic_center + framing_condition*norm_condition*hedonic_center + framing_condition*norm_condition*ingroup_identification_center + socially_desirable_center + clothing_interest_center + Gender + Age_center, data = data_R, family = "binomial")
log_model <- glm(consumer_behaviors ~ framing_condition*norm_condition*biospheric_center + framing_condition*norm_condition*altruistic_center + framing_condition*norm_condition*egoistic_center + framing_condition*norm_condition*hedonic_center + framing_condition*norm_condition*ingroup_identification_center + self_deceptive_center + impress_manag_center + clothing_interest_center + Gender + Age_center, data = data_R, family = "binomial")
anova(log_model) %>%
knitr::kable(digits = 3)
anova(pool(log_mice)) %>%
knitr::kable(digits = 3)
log_summ <- summary(log_model)
log_summ
wald.test(b = coef(log_model), Sigma = vcov(log_model), Terms = 2:3)
wald.test(b = coef(log_model), Sigma = vcov(log_model), Terms = 17:24)
# on the log odds scale
emmeans(log_model, pairwise ~ framing_condition, adjust = "none")
emmip(log_model, ~ framing_condition, CIs = TRUE, xlab = "Framing Condition", ylab = "log odds(Consumer Behaviors)")
# using probabilities
emmeans(log_model, pairwise ~ framing_condition, adjust = "none", regrid = "response")
emmip(log_model, ~ framing_condition, CIs = TRUE, regrid = "response", xlab = "Framing Condition", ylab = "Consumer Behaviors")
# on the log odds scale
emmeans(log_model, pairwise ~ norm_condition, adjust = "none")
emmip(log_model, ~ norm_condition, CIs = TRUE, xlab = "Norm Condition", ylab = "log odds(Consumer Behaviors)")
# using probabilities
emmeans(log_model, pairwise ~ norm_condition, adjust = "none", regrid = "response")
emmip(log_model, ~ norm_condition, CIs = TRUE, regrid = "response", xlab = "Framing Condition", ylab = "Consumer Behaviors")
# on the log odds scale
emmeans(log_model, pairwise ~ norm_condition | framing_condition, adjust = "none")
emmip(log_model, framing_condition ~ norm_condition, CIs = FALSE, xlab = "Norm Condition", ylab = "log odds(Consumer Behaviors)")
# using probabilities
emmeans(log_model, pairwise ~ norm_condition | framing_condition, adjust = "none", regrid = "response")
emmip(log_model, framing_condition ~ norm_condition, CIs = FALSE, regrid = "response", xlab = "Framing Condition", ylab = "Consumer Behaviors")
# on the log odds scale
emmeans(log_model, pairwise ~ framing_condition, adjust = "none")
emmip(log_model, ~ framing_condition, CIs = TRUE, xlab = "Framing Condition", ylab = "log odds(Consumer Behaviors)")
# using probabilities
emmeans(log_model, pairwise ~ framing_condition, adjust = "none", regrid = "response")
emmip(log_model, ~ framing_condition, CIs = TRUE, regrid = "response", xlab = "Framing Condition", ylab = "Consumer Behaviors")
# on the log odds scale
emmeans(log_model, pairwise ~ norm_condition, adjust = "none")
emmip(log_model, ~ norm_condition, CIs = TRUE, xlab = "Norm Condition", ylab = "log odds(Consumer Behaviors)")
emtrends(full_model_1a, ~norm_condition, var = "biospheric_center", adjust = "none")
# On a single graph
at_list <- list(biospheric_center = seq(-5, 1.3, by = 1))
emmip(full_model_1a, norm_condition ~ biospheric_center, at = at_list, CIs = TRUE, xlab = "Biospheric Values (centered)", ylab = "Consumer Intentions")
